cmake_minimum_required(VERSION 3.16)

set(KERNEL_PROJECT_NAME engine_kernel)

set(ENGINE_PUBLIC_INCLUDES
        includes/kernel/Application.hpp
        includes/kernel/utils/test.hpp
        includes/kernel/Log.hpp
        includes/kernel/Event.hpp)

set(ENGINE_PRIVATE_SOURCES
        src/kernel/Application.cpp
        src/kernel/utils/test.cpp
        src/kernel/Window.cpp
        src/kernel/Rendering/OpenGL/ShaderProgram.cpp)

set(ENGINE_PRIVATE_INCLUDES
        src/kernel/Window.hpp
        src/kernel/Rendering/OpenGL/ShaderProgram.hpp)

set(ENGINE_ALL_SOURCES
        ${ENGINE_PUBLIC_INCLUDES}
        ${ENGINE_PRIVATE_SOURCES}
        ${ENGINE_PRIVATE_INCLUDES})

add_library(${KERNEL_PROJECT_NAME} STATIC
        ${ENGINE_ALL_SOURCES})

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES
        ${ENGINE_ALL_SOURCES})


target_include_directories(${KERNEL_PROJECT_NAME} PUBLIC includes)
target_include_directories(${KERNEL_PROJECT_NAME} PRIVATE src)
target_compile_features(${KERNEL_PROJECT_NAME} PUBLIC cxx_std_17)

add_subdirectory(../external/glfw ${CMAKE_CURRENT_BINARY_DIR}/glfw)
target_link_libraries(${KERNEL_PROJECT_NAME} PRIVATE glfw)

add_subdirectory(../external/spdlog ${CMAKE_CURRENT_BINARY_DIR}/spdlog)
target_link_libraries(${KERNEL_PROJECT_NAME} PRIVATE spdlog)

add_subdirectory(../external/glad ${CMAKE_CURRENT_BINARY_DIR}/glad)
target_link_libraries(${KERNEL_PROJECT_NAME} PRIVATE glad)


set(IMGUI_INCLUDES
        ../external/imgui/imgui.h
        ../external/imgui/backends/imgui_impl_glfw.h
        ../external/imgui/backends/imgui_impl_opengl3.h)

set(IMGUI_SOURCES
        ../external/imgui/imgui.cpp
        ../external/imgui/backends/imgui_impl_glfw.cpp
        ../external/imgui/backends/imgui_impl_opengl3.cpp
        ../external/imgui/imgui_draw.cpp
        ../external/imgui/imgui_tables.cpp
        ../external/imgui/imgui_widgets.cpp
        ../external/imgui/imgui_demo.cpp)

add_library(ImGui STATIC
        ${IMGUI_INCLUDES}
        ${IMGUI_SOURCES})

target_include_directories(ImGui PUBLIC ../external)
target_include_directories(ImGui PUBLIC ../external/imgui)
target_link_libraries(ImGui PRIVATE glad glfw)

target_link_libraries(${KERNEL_PROJECT_NAME} PRIVATE ImGui)
